#Install staging nightly build of idmtools including emodpy
# run all tests
# trigger test with checkin commit contains "Run all test!"

name: "run_all_tests"
on: [push, pull_request, workflow_dispatch]
jobs:
  run-all-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.9]
    env:
      bamboo_user: ${{ secrets.PYPI_STAGING_USERNAME }}
      bamboo_password: ${{ secrets.PYPI_STAGING_PASSWORD }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: ${{ matrix.os }} Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade py-make flake8 black

      - name: Install code
        run: |
          python -m pip install --upgrade -e . --extra-index-url=https://packages.idmod.org/api/pypi/pypi-production/simple

      - name: install idmtools-test and emod files from jfrog
        run: |
          python -m pip install --upgrade -r tests/requirements.txt 

      - name: install emod-api from staging only if commit message contains "test-emood-api-staging"
        if: contains(github.event.head_commit.message, 'test-emood-api-staging')
        run: |
          python -m pip install --upgrade emod_api~=2.0 --extra-index-url=https://${{ env.bamboo_user }}:${{ env.bamboo_password }}@packages.idmod.org/api/pypi/pypi-staging/simple --verbose
          
      - name: login to comps2
        shell: bash
        env:
          COMPS_USER: ${{ secrets.MY_USER }}
          COMPS_PASSWORD: ${{ secrets.MY_PASSWORD }}
        run: |
          echo ${{ secrets.MY_USER }}
          echo ${{ secrets.MY_PASSWORD }}
          echo $COMPS_USER
          echo $COMPS_PASSWORD
          echo "$COMPS_USER"
          echo "$COMPS_PASSWORD"
          python .dev_scripts/create_auth_token_args.py --username "$COMPS_USER" --password "$COMPS_PASSWORD"

      - name: run tests
        run: |
          cd tests
          pytest -n 0 test_download_from_package.py
          pytest -n 10 --dist loadfile -v -m emod --junitxml="test_results.xml"

      - name: Upload emodpy test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: emodpy_test_results
          path: tests/test_results.xml
